<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="4.8.1@f73f2299dbc59a3e6c4d66cff4605176e728ee69">
  <file src="src/AuraRouter.php">
    <FalsableReturnStatement occurrences="1">
      <code>$this-&gt;router-&gt;getGenerator()-&gt;generateRaw($name, $substitutions)</code>
    </FalsableReturnStatement>
    <InvalidFalsableReturnType occurrences="1">
      <code>string</code>
    </InvalidFalsableReturnType>
    <MissingClosureParamType occurrences="2">
      <code>$matched</code>
      <code>$route</code>
    </MissingClosureParamType>
    <MixedArgument occurrences="5">
      <code>$this-&gt;pathMethodMap[$path]</code>
      <code>$this-&gt;pathMethodMap[$path]</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
    </MixedArgument>
    <MixedAssignment occurrences="1">
      <code>$value</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="1">
      <code>false|Route</code>
    </MixedInferredReturnType>
    <MixedMethodCall occurrences="1">
      <code>getName</code>
    </MixedMethodCall>
    <MixedReturnStatement occurrences="1"/>
    <PossiblyNullArgument occurrences="2">
      <code>$allowedMethods</code>
      <code>$allowedMethods</code>
    </PossiblyNullArgument>
    <RedundantCastGivenDocblockType occurrences="1">
      <code>(string) $failedRoute-&gt;name</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="test/AuraRouter/ConfigProviderTest.php">
    <RedundantCondition occurrences="1">
      <code>assertIsArray</code>
    </RedundantCondition>
  </file>
  <file src="test/AuraRouterTest.php">
    <InvalidArgument occurrences="5">
      <code>$request</code>
      <code>$request</code>
      <code>$request</code>
      <code>$request</code>
      <code>$request</code>
    </InvalidArgument>
    <InvalidMethodCall occurrences="4">
      <code>shouldBeCalled</code>
      <code>shouldBeCalled</code>
      <code>shouldBeCalled</code>
      <code>willReturn</code>
    </InvalidMethodCall>
    <InvalidPropertyAssignmentValue occurrences="4">
      <code>$this-&gt;prophesize(AuraGenerator::class)</code>
      <code>$this-&gt;prophesize(AuraMap::class)</code>
      <code>$this-&gt;prophesize(AuraMatcher::class)</code>
      <code>$this-&gt;prophesize(AuraRouterContainer::class)</code>
    </InvalidPropertyAssignmentValue>
    <MissingReturnType occurrences="18">
      <code>testCanGenerateUriFromRoutes</code>
      <code>testCanSpecifyAuraRouteTokensViaRouteOptions</code>
      <code>testCanSpecifyAuraRouteValuesViaRouteOptions</code>
      <code>testCanSpecifyAuraRouteWildcardViaRouteOptions</code>
      <code>testFailedRoutingDueToUnknownCausesResultsInFailureRouteNotDueToMethod</code>
      <code>testFailureToMatchSubpathWhenRootPathRouteIsPresentShouldResultIn405</code>
      <code>testGeneratedUriIsNotEncoded</code>
      <code>testHeadAndOptionsAlwaysResultInRoutingSuccessIfPathMatches</code>
      <code>testMatchFailureDueToHttpMethodReturnsRouteResultWithAllowedMethods</code>
      <code>testMatchFailureNotDueToHttpMethodReturnsGenericRouteFailureResult</code>
      <code>testMatchingInjectsRouteIntoAuraRouter</code>
      <code>testMatchingRouteShouldReturnSuccessfulRouteResult</code>
      <code>testMethodFailureWhenMultipleRoutesUseSamePathShouldResultIn405ListingAllAllowedMethods</code>
      <code>testReturns404ResultIfAuraReturnsNullForFailedRoute</code>
      <code>testReturnsRouteFailureForRouteInjectedManuallyIntoBaseRouterButNotRouterBridge</code>
      <code>testSuccessfulRouteResultComposesMatchedRoute</code>
      <code>testUriGenerationInjectsRouteIntoAuraRouter</code>
      <code>testWhenRouteAllowsAnyHttpMethodRouterShouldResultInSuccess</code>
    </MissingReturnType>
    <MixedArgument occurrences="5">
      <code>$property-&gt;getValue($router)</code>
      <code>$route-&gt;getOptions()['tokens']</code>
      <code>$route-&gt;getOptions()['values']</code>
      <code>$route-&gt;getOptions()['wildcard']</code>
      <code>$this-&gt;auraRouterContainer-&gt;reveal()</code>
    </MixedArgument>
    <MixedInferredReturnType occurrences="2">
      <code>array</code>
      <code>array</code>
    </MixedInferredReturnType>
    <MixedMethodCall occurrences="4">
      <code>shouldBeCalled</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
    </MixedMethodCall>
    <PossiblyFalseReference occurrences="11">
      <code>getMiddleware</code>
      <code>shouldBeCalled</code>
      <code>shouldBeCalled</code>
      <code>shouldBeCalled</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
    </PossiblyFalseReference>
    <PossiblyNullArgument occurrences="5">
      <code>$route-&gt;getAllowedMethods()</code>
      <code>$route-&gt;getAllowedMethods()</code>
      <code>$route-&gt;getAllowedMethods()</code>
      <code>$route-&gt;getAllowedMethods()</code>
      <code>$route-&gt;getAllowedMethods()</code>
    </PossiblyNullArgument>
    <PossiblyNullReference occurrences="1">
      <code>getMiddleware</code>
    </PossiblyNullReference>
    <UndefinedMethod occurrences="11">
      <code>reveal</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
    </UndefinedMethod>
    <UndefinedThisPropertyAssignment occurrences="1">
      <code>$this-&gt;middleware</code>
    </UndefinedThisPropertyAssignment>
  </file>
  <file src="test/ImplicitMethodsIntegrationTest.php">
    <DeprecatedClass occurrences="1">
      <code>RouterIntegrationTest</code>
    </DeprecatedClass>
  </file>
</files>
